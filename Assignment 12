Chapter 4, Section 4.10 Programming Exercises: Question 8:
Using a loop and indexed addressing, write code that rotates the members of a 32-bit integer array 
forward one position.  The value at the end of the array must wrap around to the first position.  
For example, the array [10,20,30,40] would be transformed into [40,10,20,30]

ExitProcess proto
WriteInt64 PROTO
Crlf PROTO

.data
MyArray QWORD 10d,20d,30d,40d	;dont have to put d, it will assume decimal with or without suffix
finalArray QWORD 4 DUP(0)
.code
main proc

	mov rcx, LENGTHOF MyArray
	mov rsi, 0
	mov r15, 8	;This is our index multiplier

	;print out array numbers
	mov rcx, 4
	mov rsi, 0

StartLoop:
	mov rax, rsi
	mul r15
	mov rdi, rax
	mov rax, myArray[rdi]
	call WriteInt64
	inc rsi
loop StartLoop
	call Crlf
  
  
;make the rotation  
mov rcx, 4
mov rsi, 0
PoopLoop:
	;figure out our loop index and get the current index's value
	mov rax, rsi
	mul r15
	mov rdx, myArray[rax]

	cmp rsi, 3
	je HandleLast

	mov finalArray[rax + 8], rdx
	jmp EndLoop
	
	HandleLast:
	mov finalArray[0], rdx

	EndLoop:

	inc rsi
loop PoopLoop	

;print out array numbers after switch
mov rcx, LENGTHOF finalArray
mov rsi, 0
MyLoop:
		mov rax, rsi
		mul r15
		mov rdi, rax
		mov rax, finalArray[rdi]
		call WriteInt64
		inc rsi
loop MyLoop

   call ExitProcess
main endp
end
